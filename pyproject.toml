[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ginfinity"
version = "0.2.2"
description = "GINFINITY: Graph-based RNA Structure Embedding Generator"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT License" }
authors = [
    { name = "Nicolas Aira", email = "nicoaira@example.com" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Intended Audience :: Science/Research",
    "Development Status :: 4 - Beta"
]

dependencies = [
  "pandas >=2.2, <3.0",
  "torch >=2.4, <3.0",
  "tqdm >=4.67, <5.0",
  "networkx >=3.4, <4.0",
  "gputil >=1.4, <2.0",
  "psutil >=7.0, <8.0",
  "numpy >=1.26, <3.0",
  "torch-geometric ==2.6.0",

  # PyG C-extension wheels, versions common to 11.8/12.4/12.6/cpu
  "torch-scatter ==2.1.2",
  "torch-sparse  ==0.6.18",
  "torch-cluster ==1.6.3",
  "torch-spline-conv ==1.2.2"
]

[project.urls]
Homepage = "https://github.com/nicoaira/GINFINITY"
Repository = "https://github.com/nicoaira/GINFINITY"

[project.scripts]
ginfinity-embed = "ginfinity.scripts.generate_embeddings:main"
ginfinity-generate-windows = "ginfinity.scripts.generate_windows:main"
ginfinity-compute-distances = "ginfinity.scripts.compute_distances:main"
ginfinity-train = "ginfinity.scripts.train_model:main"
ginfinity-optimize-msa = "ginfinity.scripts.optimize_embed_msa:main"

[project.optional-dependencies]
train = [
  "scikit-learn >=1.6, <2.0"
]
optuna = [
  "optuna >=3.6, <4.0"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
include-package-data = true
